# home/yuya/network_vulnerability_assessment_tool/venv/bin/python /home/yuya/network_vulnerability_assessment_tool/src/gui/main_window.py

import PySimpleGUI as sg
import sys
sys.path.append('/home/yuya/network_vulnerability_assessment_tool')
from scapy.all import ARP,Ether,srp
from src.scanner.network_scan import *
from src.scanner.Device import Device
from src.scanner.vulnerbility_check import check_ssh_vulnerbility,check_telnet_vulnerbility


sg.theme("SystemDefault1")

DEVICE_IP = []

def start_screen():
    
    layout = [
        [sg.Text("network_vulnerability_assessment_tool")],
        [sg.Button("Start network-scan",key="-SCAN-")],
        [sg.Button("exit",key="-EXIT-")]
    ]

    window = sg.Window("network_tester",layout)

    while True:
        event,value = window.read()

        if event in (sg.WINDOW_CLOSED,"-EXIT-"):
            break
        elif event in ("-SCAN-"):
            window.close()
            lan_scan_screen()
    
    window.close()

def lan_scan_screen():
    scan_results = scan()

    for i in range(0,len(scan_results)):
        device = Device(scan_results[i]["ip"],scan_results[i]["mac"])
        DEVICE_IP.append(device.ip)

    header = ["IP Address","MAC Address"]

    data = [[result["ip"],result["mac"]] for result in scan_results]
    print(data)

    layout = [
        [sg.Text("Scan result")],
        [sg.Table(
            values=data,
            headings=header,
            #display_row_numbers=True,
            auto_size_columns=True,
            justification="center",
            #num_rows=(25,len(data))
        )],
        [sg.Button("vulnerability_check",key="-CHECK-")],
        [sg.Button("exit",key="-EXIT-")]
    ]    

    window = sg.Window("VulnerbleCheck result screen",layout)

    while True:
        event,value = window.read()
        if event in (sg.WIN_CLOSED,"-EXIT-"):
            break
        elif event == "-CHECK-":
            window.close()
            vulnerability_check_screen()

    window.close()

def vulnerability_check_screen():
    results_ssh = []
    results_telnet = []

    for i in range(0,len(DEVICE_IP)):
        print(DEVICE_IP[i])
        results_ssh.append(check_ssh_vulnerbility(DEVICE_IP[i]))
        results_telnet.append(check_telnet_vulnerbility(DEVICE_IP[i]))
        a = [[results_ssh,results_telnet]]

    data = []
    header = ["IP Address","ssh","telnet"]

    for ip,ssh,telnet in zip(DEVICE_IP,results_ssh,results_telnet):
        data.append([ip,ssh,telnet])

    layout = [
        [sg.Table(
            headings=header,
            values=data,
            auto_size_columns=False,
            display_row_numbers=False,
            justification="center",
            num_rows=10,
            key="-TABLE-",
            row_height=35,
            #col_widths=[25,20,20]
        )],
         [sg.Button("exit",key="-EXIT-")]
    ]

    window = sg.Window("SSH/Telnet Vulnerbility Check Results",layout,resizable=True)

    while True:
        event,values = window.read()
        if event in (sg.WINDOW_CLOSED,"-EXIT-"):
            break
    window.close()


   

if __name__ == "__main__":
    start_screen()